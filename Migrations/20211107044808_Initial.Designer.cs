// <auto-generated />
using System;
using BurgerShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BurgerShop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211107044808_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BurgerShop.Models.Cart", b =>
                {
                    b.Property<long>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cart_id")
                        .HasColumnType("bigint");

                    b.HasKey("CartId")
                        .HasName("pk_carts");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("BurgerShop.Models.CartLine", b =>
                {
                    b.Property<long>("CartLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cart_line_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("CartId")
                        .HasColumnName("cart_id")
                        .HasColumnType("bigint");

                    b.Property<long>("MenuId")
                        .HasColumnName("menu_id")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("int");

                    b.HasKey("CartLineId")
                        .HasName("pk_cart_lines");

                    b.HasIndex("CartId")
                        .HasName("ix_cart_lines_cart_id");

                    b.HasIndex("MenuId")
                        .HasName("ix_cart_lines_menu_id");

                    b.ToTable("cart_lines");
                });

            modelBuilder.Entity("BurgerShop.Models.Menu", b =>
                {
                    b.Property<long>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("menu_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("MenuId")
                        .HasName("pk_menus");

                    b.ToTable("menus");
                });

            modelBuilder.Entity("BurgerShop.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("OrderId")
                        .HasName("pk_orders");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("BurgerShop.Models.OrderLine", b =>
                {
                    b.Property<long>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_line_id")
                        .HasColumnType("bigint");

                    b.Property<long>("MenuId")
                        .HasColumnName("menu_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderId")
                        .HasColumnName("order_id")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineId")
                        .HasName("pk_order_lines");

                    b.HasIndex("MenuId")
                        .HasName("ix_order_lines_menu_id");

                    b.HasIndex("OrderId")
                        .HasName("ix_order_lines_order_id");

                    b.ToTable("order_lines");
                });

            modelBuilder.Entity("BurgerShop.Models.CartLine", b =>
                {
                    b.HasOne("BurgerShop.Models.Cart", null)
                        .WithMany("CartLines")
                        .HasForeignKey("CartId")
                        .HasConstraintName("fk_cart_lines_carts_cart_id");

                    b.HasOne("BurgerShop.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .HasConstraintName("fk_cart_lines_menus_menu_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BurgerShop.Models.OrderLine", b =>
                {
                    b.HasOne("BurgerShop.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .HasConstraintName("fk_order_lines_menus_menu_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerShop.Models.Order", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_order_lines_orders_order_id");
                });
#pragma warning restore 612, 618
        }
    }
}
